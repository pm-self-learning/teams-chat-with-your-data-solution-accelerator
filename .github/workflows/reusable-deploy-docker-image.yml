name: Reusable Docker image deploy workflow

on:
  workflow_call:
   inputs:
      service_name:
        required: false
        type: string

      deploy_command:
        required: true
        type: string

      image_name:
          required: true
          type: string

      tag_name:
        required: true
        type: string

jobs:

    deploy:
        runs-on: ubuntu-latest

        steps:

          - name: Evaluate environment value
            id: set-env
            run: |
              if [ "${{ github.ref }}" == "refs/heads/main" ]; then
                echo "SOURCE_ENV=PROD" >> $GITHUB_ENV
              else
                echo "SOURCE_ENV=DEV" >> $GITHUB_ENV
              fi

          - name: Get ACR name and other details
            run: |
                echo "AZURE_CONTAINER_REGISTRY=${{ env.SOURCE_ENV }}_AZURE_CONTAINER_REGISTRY"  >> $GITHUB_ENV
                echo "AZURE_CONTAINER_REGISTRY_USER_NAME=${{ env.SOURCE_ENV }}_AZURE_CONTAINER_REGISTRY_USER_NAME" >> $GITHUB_ENV
                echo "AZURE_CONTAINER_REGISTRY_PASSWORD=${{ env.SOURCE_ENV }}_AZURE_CONTAINER_REGISTRY_PASSWORD"  >> $GITHUB_ENV
                echo "AZURE_RESOURCE_GROUP=${{ env.SOURCE_ENV }}_AZURE_RESOURCE_GROUP"  >> $GITHUB_ENV

                echo "AZURE_BACKEND_FUNCTION_APP_NAME=${{ env.SOURCE_ENV }}_AZURE_BACKEND_FUNCTION_APP_NAME"  >> $GITHUB_ENV
                echo "AZURE_FRONTEND_APP_NAME=${{ env.SOURCE_ENV }}_AZURE_FRONTEND_APP_NAME"  >> $GITHUB_ENV
                echo "AZURE_ADMIN_APP_SERVICE_NAME=${{ env.SOURCE_ENV }}_AZURE_ADMIN_APP_SERVICE_NAME"  >> $GITHUB_ENV
                echo "TEAMS_APP_NAME=${{ env.SOURCE_ENV }}_TEAMS_APP_NAME"  >> $GITHUB_ENV

                echo "AZURE_CLIENT_ID=${{ env.SOURCE_ENV }}_AZURE_CLIENT_ID"  >> $GITHUB_ENV
                echo "AZURE_TENANT_ID=${{ env.SOURCE_ENV }}_AZURE_TENANT_ID"  >> $GITHUB_ENV
                echo "AZURE_SUBSCRIPTION_ID=${{ env.SOURCE_ENV }}_AZURE_SUBSCRIPTION_ID"  >> $GITHUB_ENV


          - name: Set service name
            id: set-service-name
            run: |
                    if [ "${{ inputs.service_name }}" == "backend-app" ]; then
                        echo "service_name=${{ secrets[env.AZURE_BACKEND_FUNCTION_APP_NAME] }}" >> $GITHUB_ENV
                    elif [ "${{ inputs.service_name }}" == "frontend-app" ]; then
                      echo "service_name=${{ secrets[env.AZURE_FRONTEND_APP_NAME] }}" >> $GITHUB_ENV
                    elif [ "${{ inputs.service_name }}" == "admin-frontend-app" ]; then
                      echo "service_name=${{ secrets[env.AZURE_ADMIN_APP_SERVICE_NAME] }}" >> $GITHUB_ENV
                    elif [ "${{ inputs.service_name }}" == "teamsApp" ]; then
                      echo "service_name=${{ secrets[env.TEAMS_APP_NAME] }}" >> $GITHUB_ENV
                    else
                      echo "service_name=unknown" >> $GITHUB_ENV
                    fi

          - name: Azure Login
            uses: azure/login@v1
            with:
              client-id: ${{ secrets[env.AZURE_CLIENT_ID] }}
              tenant-id: ${{ secrets[env.AZURE_TENANT_ID] }}
              subscription-id: ${{ secrets[env.AZURE_SUBSCRIPTION_ID] }}


          - name: Set Image name
            id: image-name
            run: |
                echo "IMAGE_NAME=${{ secrets[env.AZURE_CONTAINER_REGISTRY] }}/${{ inputs.image_name }}:${{ inputs.tag_name }}" >> $GITHUB_ENV

          - name: Set Azure App Service container settings
            if: ${{ inputs.deploy_command == 'app-service' }}
            run: |
              az webapp config container set \
                --name  ${{ env.service_name }} \
                --resource-group ${{ secrets[env.AZURE_RESOURCE_GROUP] }} \
                --container-image-name   ${{ env.IMAGE_NAME }} \
                --container-registry-url https://${{ secrets[env.AZURE_CONTAINER_REGISTRY] }} \
                --container-registry-user ${{ secrets[env.AZURE_CONTAINER_REGISTRY_USER_NAME] }} \
                --container-registry-password ${{ secrets[env.AZURE_CONTAINER_REGISTRY_PASSWORD] }}

          - name: Set Azure Function App container settings
            if: ${{ inputs.deploy_command == 'function-app' }}
            run: |
              az functionapp config container set \
                --name ${{ env.service_name }} \
                --resource-group ${{ secrets[env.AZURE_RESOURCE_GROUP] }} \
                --docker-custom-image-name  ${{ env.IMAGE_NAME }}  \
                --docker-registry-server-url https://${{ secrets[env.AZURE_CONTAINER_REGISTRY] }} \
                --docker-registry-server-user ${{ secrets[env.AZURE_CONTAINER_REGISTRY_USER_NAME] }} \
                --docker-registry-server-password ${{ secrets[env.AZURE_CONTAINER_REGISTRY_PASSWORD] }}
